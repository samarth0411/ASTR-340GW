import tkinter as tk
from tkinter import ttk
import matplotlib.pyplot as plt
from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg
import numpy as np

# Simulated datasets (based on Foothill Simulations)
galaxy_data = {
    "M31": {
        "radius_kpc": np.linspace(0.1, 40, 25),
        "velocity_kms": np.concatenate([
            np.linspace(0, 230, 10),
            np.full(15, 230)
        ]),
        "mass_enclosed": lambda r: 5e10 * np.log1p(r)
    },
    "Milky Way": {
        "radius_kpc": np.linspace(0.1, 30, 25),
        "velocity_kms": np.concatenate([
            np.linspace(0, 220, 10),
            np.full(15, 220)
        ]),
        "mass_enclosed": lambda r: 4e10 * np.log1p(r)
    }
}

def plot_galaxy(axs, galaxy):
    data = galaxy_data[galaxy]
    r = data["radius_kpc"]
    v = data["velocity_kms"]
    mass = data["mass_enclosed"](r)

    axs[0].clear()
    axs[1].clear()

    # Velocity vs Radius
    axs[0].scatter(r, v, label="Observed Rotation Curve", color='blue', s=40)
    axs[0].set_title(f"{galaxy} Rotation Curve", fontsize=16)
    axs[0].set_xlabel("Radius (kpc)", fontsize=14)
    axs[0].set_ylabel("Orbital Velocity (km/s)", fontsize=14)

    # Mass Enclosed vs Radius
    axs[1].scatter(r, mass, label="Mass Enclosed", color='green', s=40)
    axs[1].set_title(f"{galaxy} Mass Enclosed vs Radius", fontsize=16)
    axs[1].set_xlabel("Radius (kpc)", fontsize=14)
    axs[1].set_ylabel("Mass (solar masses)", fontsize=14)
    axs[1].set_yscale("log")

    for ax in axs:
        ax.tick_params(axis='both', labelsize=12)

    fig.tight_layout()
    canvas.draw()

def on_submit():
    galaxy = galaxy_entry.get().strip()
    if galaxy in galaxy_data:
        plot_galaxy(axs, galaxy)
    else:
        error_label.config(text="Galaxy not recognized. Try 'M31' or 'Milky Way'.")

# Main Application Window
app = tk.Tk()
app.title("Galaxy Rotation Curves")

frame = ttk.Frame(app, padding="10")
frame.pack(fill=tk.BOTH, expand=True)

galaxy_label = ttk.Label(frame, text="Enter Galaxy (M31 or Milky Way):", font=("Arial", 14))
galaxy_label.pack(pady=5)

galaxy_entry = ttk.Entry(frame, font=("Arial", 14))
galaxy_entry.pack(pady=5)

submit_button = ttk.Button(frame, text="Plot Data", command=on_submit)
submit_button.pack(pady=5)

error_label = ttk.Label(frame, text="", foreground="red", font=("Arial", 12))
error_label.pack()

# Matplotlib Figure
fig, axs = plt.subplots(1, 2, figsize=(12, 5))
canvas = FigureCanvasTkAgg(fig, master=frame)
canvas.get_tk_widget().pack(fill=tk.BOTH, expand=True)

app.mainloop()
